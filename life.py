import pygame,sys,random
pygame.init()
COLORS=((0,0,102),(0,0,153),(0,0,204),(0,0,255),(0,51,0),(0,51,51),(0,51,102),(0,51,153),(0,51,204),(0,51,255),(0,102,0),(0,102,51),(0,102,102),(0,102,153),(0,102,204),(0,102,255),(0,153,0),(0,153,51),(0,153,102),(0,153,153),(0,153,204),(0,153,255),(0,204,0),(0,204,51),(0,204,102),(0,204,153),(0,204,204),(0,204,255),(0,255,0),(0,255,51),(0,255,102),(0,255,153),(0,255,204),(0,255,255),(51,0,0),(51,0,51),(51,0,102),(51,0,153),(51,0,204),(51,0,255),(51,51,0),(51,51,51),(51,51,102),(51,51,153),(51,51,204),(51,51,255),(51,102,0),(51,102,51),(51,102,102),(51,102,153),(51,102,204),(51,102,255),(51,153,0),(51,153,51),(51,153,102),(51,153,153),(51,153,204),(51,153,255),(51,204,0),(51,204,51),(51,204,102),(51,204,153),(51,204,204),(51,204,255),(51,255,0),(51,255,51),(51,255,102),(51,255,153),(51,255,204),(51,255,255),(102,0,0),(102,0,51),(102,0,102),(102,0,153),(102,0,204),(102,0,255),(102,51,0),(102,51,51),(102,51,102),(102,51,153),(102,51,204),(102,51,255),(102,102,0),(102,102,51),(102,102,102),(102,102,153),(102,102,204),(102,102,255),(102,153,0),(102,153,51),(102,153,102),(102,153,153),(102,153,204),(102,153,255),(102,204,0),(102,204,51),(102,204,102),(102,204,153),(102,204,204),(102,204,255),(102,255,0),(102,255,51),(102,255,102),(102,255,153),(102,255,204),(102,255,255),(153,0,0),(153,0,51),(153,0,102),(153,0,153),(153,0,204),(153,0,255),(153,51,0),(153,51,51),(153,51,102),(153,51,153),(153,51,204),(153,51,255),(153,102,0),(153,102,51),(153,102,102),(153,102,153),(153,102,204),(153,102,255),(153,153,0),(153,153,51),(153,153,102),(153,153,153),(153,153,204),(153,153,255),(153,204,0),(153,204,51),(153,204,102),(153,204,153),(153,204,204),(153,204,255),(153,255,0),(153,255,51),(153,255,102),(153,255,153),(153,255,204),(153,255,255),(204,0,0),(204,0,51),(204,0,102),(204,0,153),(204,0,204),(204,0,255),(204,51,0),(204,51,51),(204,51,102),(204,51,153),(204,51,204),(204,51,255),(204,102,0),(204,102,51),(204,102,102),(204,102,153),(204,102,204),(204,102,255),(204,153,0),(204,153,51),(204,153,102),(204,153,153),(204,153,204),(204,153,255),(204,204,0),(204,204,51),(204,204,102),(204,204,153),(204,204,204),(204,204,255),(204,255,0),(204,255,51),(204,255,102),(204,255,153),(204,255,204),(204,255,255),(255,0,0),(255,0,51),(255,0,102),(255,0,153),(255,0,204),(255,0,255),(255,51,0),(255,51,51),(255,51,102),(255,51,153),(255,51,204),(255,51,255),(255,102,0),(255,102,51),(255,102,102),(255,102,153),(255,102,204),(255,102,255),(255,153,0),(255,153,51),(255,153,102),(255,153,153),(255,153,204),(255,153,255),(255,204,0),(255,204,51),(255,204,102),(255,204,153),(255,204,204),(255,204,255),(255,255,0),(255,255,51),(255,255,102),(255,255,153),(255,255,204),(255,255,255))
CELL_SIZE=5
WINDOW=pygame.display.set_mode((1000,700),0,32)
clock=pygame.time.Clock()
pygame.display.set_caption("Gra o Å¼ycie")
CELL_Y=int(700/CELL_SIZE)
CELL_X=int(1000/CELL_SIZE)
DEAD_CELL=0
LIFE_CELL=1
FIELD=[[DEAD_CELL for y in range(CELL_Y)] for x in range(CELL_X)]
FIELD_COLORS=[[ random.choice(COLORS) for y in range(CELL_Y)] for x in range(CELL_X)]
#print(FIELD[1][2])
def neighborhood(x,y):
    if FIELD[x][y]==1:
        counter=-1
    else:
        counter=0
    for i in range(x-1,x+2):
        for j in range(y-1,y+2):
            if i>=0 and j>=0 and i<CELL_X and j<CELL_Y:
                if FIELD[i][j]==1:
                    counter+=1
    return counter
def god():
    NEW_FIELD=[[j for j in i] for i in FIELD]
    for i in range(CELL_X):
        for j in range(CELL_Y):
            p=neighborhood(i,j)
            if FIELD[i][j]==0 and p==3:
                NEW_FIELD[i][j]=1
            elif FIELD[i][j]==1 and p!=2 and p!=3:
                NEW_FIELD[i][j]=0
    return NEW_FIELD
def draw_cells():
    for i in range(CELL_X):
        for j in range(CELL_Y):
            if FIELD[i][j]==1:
                #print(FIELD[i][j],i,j)
                pygame.draw.rect(WINDOW,(0,0,0),(i*CELL_SIZE,j*CELL_SIZE,CELL_SIZE,CELL_SIZE),2)
                pygame.draw.rect(WINDOW,FIELD_COLORS[i][j],(i*CELL_SIZE+2,j*CELL_SIZE+2,CELL_SIZE-2,CELL_SIZE-2),0)
DEATH=False
b=False
while True:
    for event in pygame.event.get():
        if event.type== pygame.QUIT:
            pygame.quit()
            sys.exit()
        if event.type==pygame.KEYDOWN and event.key==pygame.K_RETURN:
            DEATH=True
        if DEATH==False:
            if event.type==pygame.MOUSEBUTTONDOWN:
                b=True
                b_type=event.button
            if event.type==pygame.MOUSEBUTTONUP:
                b=False
            if b:
                mx,my=pygame.mouse.get_pos()
                mx=int(mx/CELL_SIZE)
                my=int(my/CELL_SIZE)
                if b_type==1:
                    FIELD[mx][my]=LIFE_CELL
                if b_type==2:
                    FIELD[mx][my]=DEAD_CELL
    if DEATH:
        FIELD=god()
    WINDOW.fill((255,255,255))
    draw_cells()
    pygame.display.update()
    if DEATH:
        clock.tick_busy_loop(30)
